[{"/Users/jsoh/nomadcoder/react-masterclass-typescript/src/index.tsx":"1","/Users/jsoh/nomadcoder/react-masterclass-typescript/src/App.tsx":"2","/Users/jsoh/nomadcoder/react-masterclass-typescript/src/Circle.tsx":"3","/Users/jsoh/nomadcoder/react-masterclass-typescript/src/theme.ts":"4","/Users/jsoh/nomadcoder/react-masterclass-typescript/src/Router.tsx":"5","/Users/jsoh/nomadcoder/react-masterclass-typescript/src/routes/Price.tsx":"6","/Users/jsoh/nomadcoder/react-masterclass-typescript/src/routes/Chart.tsx":"7","/Users/jsoh/nomadcoder/react-masterclass-typescript/src/routes/Coin.tsx":"8","/Users/jsoh/nomadcoder/react-masterclass-typescript/src/api.ts":"9","/Users/jsoh/nomadcoder/react-masterclass-typescript/src/routes/Coins.tsx":"10","/Users/jsoh/nomadcoder/react-masterclass-typescript/src/atoms.ts":"11"},{"size":455,"mtime":1639813884212,"results":"12","hashOfConfig":"13"},{"size":2142,"mtime":1639813889228,"results":"14","hashOfConfig":"13"},{"size":642,"mtime":1639451385075,"results":"15","hashOfConfig":"13"},{"size":352,"mtime":1639801194362,"results":"16","hashOfConfig":"13"},{"size":517,"mtime":1639814224940,"results":"17","hashOfConfig":"13"},{"size":4268,"mtime":1639717361374,"results":"18","hashOfConfig":"13"},{"size":2719,"mtime":1639814051489,"results":"19","hashOfConfig":"13"},{"size":6662,"mtime":1639813946759,"results":"20","hashOfConfig":"13"},{"size":744,"mtime":1639647520249,"results":"21","hashOfConfig":"13"},{"size":2576,"mtime":1639963167061,"results":"22","hashOfConfig":"13"},{"size":106,"mtime":1639963160726,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"12sxvvj",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jsoh/nomadcoder/react-masterclass-typescript/src/index.tsx",[],["51","52"],"/Users/jsoh/nomadcoder/react-masterclass-typescript/src/App.tsx",["53"],"import { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { darkTheme, lightTheme } from \"./theme\";\nimport { useState } from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router/>\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\nexport default App;\n","/Users/jsoh/nomadcoder/react-masterclass-typescript/src/Circle.tsx",[],"/Users/jsoh/nomadcoder/react-masterclass-typescript/src/theme.ts",[],"/Users/jsoh/nomadcoder/react-masterclass-typescript/src/Router.tsx",["54"],"import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\ninterface IRouterProps{}\n\nfunction Router({}: IRouterProps) {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/:coinId\">\n                    <Coin />\n                </Route>\n                <Route path=\"/\">\n                    <Coins />\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nexport default Router;","/Users/jsoh/nomadcoder/react-masterclass-typescript/src/routes/Price.tsx",["55","56","57","58"],"import ApexCharts from \"react-apexcharts\";\nimport { useQuery } from \"react-query\";\nimport styled, { keyframes } from \"styled-components\";\nimport { fetchCoinHistory, fetchCoinInfo, fetchCoinTickers } from \"../api\";\n\n\nconst animationCompo = keyframes`\n    0% {\n        transform: none;\n        opacity: 0;\n    }\n    1% {\n        transform: translateY(-5px);\n        opacity: 0.1;\n    }\n    100% {\n        transform: none;\n        opacity: 1;\n    }\n`;\n\nconst Overview = styled.div`\n    display: flex;\n    justify-content: space-between;\n    background-color: #615e5e7f;\n    padding: 10px 20px;\n    border-radius: 10px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    animation: ${ animationCompo } 0.5s linear forwards;\n`;\n\n\nconst OverviewCenter = styled(Overview)`\n    justify-content: center;\n`;\n\nconst OverviewItem = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    span{\n        margin-right: 10px;\n    }\n`;\n\ninterface InfoData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    is_new: boolean;\n    is_active: boolean;\n    type: string;\n    description: string;\n    message: string;\n    open_source: boolean;\n    started_at: string;\n    development_status: string;\n    hardware_wallet: boolean;\n    proof_type: string;\n    org_structure: string;\n    hash_algorithm: string;\n    first_data_at: string;\n    last_data_at: string;\n}\n\ninterface PriceData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    circulating_supply: number;\n    total_supply: number;\n    max_supply: number;\n    beta_value: number;\n    first_data_at: string;\n    last_updated: string;\n    quotes: {\n        USD: {\n            ath_date: string;\n            ath_price: number;\n            market_cap: number;\n            market_cap_change_24h: number;\n            percent_change_1h: number;\n            percent_change_1y: number;\n            percent_change_6h: number;\n            percent_change_7d: number;\n            percent_change_12h: number;\n            percent_change_15m: number;\n            percent_change_24h: number;\n            percent_change_30d: number;\n            percent_change_30m: number;\n            percent_from_price_ath: number;\n            price: number;\n            volume_24h: number;\n            volume_24h_change_24h: number;\n        };\n    };\n}\n\ninterface ChartProps {\n    coinId: string,\n};\n\nfunction Price({ coinId }: ChartProps){\n    const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>([\"info\", coinId], () => fetchCoinInfo(coinId));\n    const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>([\"tickers\", coinId], () => fetchCoinTickers(coinId), { refetchInterval: 5000, });\n    \n    return (\n        <div>\n            {tickersLoading ? (\"Loading Price...\") : (\n            <>\n                <OverviewCenter>\n                    <OverviewItem>\n                        <span>Price :</span>\n                        <span>{tickersData?.quotes.USD.price}</span>\n                    </OverviewItem>\n                </OverviewCenter>\n                <Overview>\n                    <OverviewItem>\n                        <span>Max Change rate in last 24h :</span>\n                        <span>{tickersData?.quotes.USD.market_cap_change_24h}</span>\n                    </OverviewItem>\n                </Overview>\n                <Overview>\n                    <OverviewItem>\n                        <span>Change rate (last 1 hours):</span>\n                        <span>{tickersData?.quotes.USD.percent_change_1h}</span>\n                    </OverviewItem>\n                </Overview>\n                <Overview>\n                    <OverviewItem>\n                        <span>Change rate (last 12 hours):</span>\n                        <span>{tickersData?.quotes.USD.percent_change_12h}</span>\n                    </OverviewItem>\n                </Overview>\n                <Overview>\n                    <OverviewItem>\n                        <span>Change rate (last 24 hours):</span>\n                        <span>{tickersData?.quotes.USD.percent_change_24h}</span>\n                    </OverviewItem>\n                </Overview>\n            </>\n            )}\n        </div>\n    );\n}\n\nexport default Price;","/Users/jsoh/nomadcoder/react-masterclass-typescript/src/routes/Chart.tsx",[],"/Users/jsoh/nomadcoder/react-masterclass-typescript/src/routes/Coin.tsx",["59","60","61"],"import { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link, Route, Switch, useLocation, useParams, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n    font-size: 48px;\n`;\n\nconst Loader = styled.span`\n    text-align: center;\n    display:block;\n`;\n\nconst Container = styled.div`\n    padding: 0px 20px;\n    max-width: 480px;\n    margin: 0 auto;\n`;\n\nconst Header = styled.header`\n    height: 15vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Overview = styled.div`\n    display: flex;\n    justify-content: space-between;\n    background-color: rgba(0,0,0,0.5);\n    padding: 10px 20px;\n    border-radius: 10px;\n`;\n\nconst OverviewCenter = styled(Overview)`\n    justify-content: center;\n    margin-top: 30px;\n`;\n\nconst OverviewItem = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 33%;\n\n    span:first-child {\n        font-size: 10px;\n        font-weight: 400;\n        text-transform: uppercase;\n        margin-bottom: 5px;\n    }\n`;\n\nconst Description = styled.p`\n    margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    margin: 25px 0px;\n    gap: 10px;\n`;\n\nconst Tab = styled.span< { isActive: boolean } >`\n    text-align: center;\n    text-transform: uppercase;\n    font-size: 12px;\n    font-weight: 400;\n    background-color: rgba(0,0,0,0.5);\n    padding: 7px 0px;\n    border-radius: 10px;\n    color: ${props => props.isActive ? props.theme.accentColor : props.theme.textColor};\n    a {\n        padding: 7px 0px;\n        display:block;\n    }\n`;\n\ninterface RouteParams {\n    coinId: string;\n}\n\ninterface RouteState {\n    name: string;\n}\n\ninterface InfoData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    is_new: boolean;\n    is_active: boolean;\n    type: string;\n    description: string;\n    message: string;\n    open_source: boolean;\n    started_at: string;\n    development_status: string;\n    hardware_wallet: boolean;\n    proof_type: string;\n    org_structure: string;\n    hash_algorithm: string;\n    first_data_at: string;\n    last_data_at: string;\n}\n\ninterface PriceData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    circulating_supply: number;\n    total_supply: number;\n    max_supply: number;\n    beta_value: number;\n    first_data_at: string;\n    last_updated: string;\n    quotes: {\n        USD: {\n            ath_date: string;\n            ath_price: number;\n            market_cap: number;\n            market_cap_change_24h: number;\n            percent_change_1h: number;\n            percent_change_1y: number;\n            percent_change_6h: number;\n            percent_change_7d: number;\n            percent_change_12h: number;\n            percent_change_15m: number;\n            percent_change_24h: number;\n            percent_change_30d: number;\n            percent_change_30m: number;\n            percent_from_price_ath: number;\n            price: number;\n            volume_24h: number;\n            volume_24h_change_24h: number;\n        };\n    };\n}\n\ninterface ICoinProps{}\n\nfunction Coin({}: ICoinProps) {\n    const { coinId } = useParams<RouteParams>();\n    const { state } = useLocation<RouteState>();\n    const priceMatch = useRouteMatch(\"/:coinId/price\");\n    const chartMatch = useRouteMatch(\"/:coinId/chart\");\n    const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>([\"info\", coinId], () => fetchCoinInfo(coinId));\n    const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>([\"tickers\", coinId], () => fetchCoinTickers(coinId), { refetchInterval: 5000, });\n    const loading = infoLoading || tickersLoading;\n    return (\n        <Container>\n            <Helmet>\n                <title>\n                    {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n                </title>\n            </Helmet>\n            <Header>\n                <Title>{state?.name ? state.name : infoLoading ? \"Loading...\" : infoData?.name}</Title>\n            </Header>\n            {infoLoading ? (\n                <Loader>Loading...</Loader>\n            ) : (\n                <>\n                    <Overview>\n                        <OverviewItem>\n                            <span>Rank:</span>\n                            <span>{infoData?.rank}</span>\n                        </OverviewItem>\n                        <OverviewItem>\n                            <span>Symbol:</span>\n                            <span>${infoData?.symbol}</span>\n                        </OverviewItem>\n                        <OverviewItem>\n                            <span>Price:</span>\n                            <span>{tickersData?.quotes?.USD?.price?.toFixed(3)}</span>\n                        </OverviewItem>\n                    </Overview>\n                    <Description>{infoData?.description}</Description>\n                    <Overview>\n                        <OverviewItem>\n                            <span>Total Suply:</span>\n                            <span>{tickersData?.total_supply}</span>\n                        </OverviewItem>\n                        <OverviewItem>\n                            <span>Max Supply:</span>\n                            <span>{tickersData?.max_supply}</span>\n                        </OverviewItem>\n                    </Overview>\n                    <Tabs>\n                        <Tab isActive={chartMatch !== null}>\n                            <Link to={`/${coinId}/chart`}>Chart</Link>\n                        </Tab>\n                        <Tab isActive={priceMatch !== null}>\n                            <Link to={`/${coinId}/price`}>Price</Link>\n                        </Tab>\n                    </Tabs>\n                    <Switch>\n                        <Route path={`/:coinId/price`}>\n                            <Price coinId={coinId} />\n                        </Route>\n                        <Route path={`/:coinId/chart`}>\n                            <Chart coinId={coinId} />\n                        </Route>\n                    </Switch>\n                    <Link to={'/'}>\n                        <OverviewCenter>\n                            <OverviewItem>\n                                Back\n                            </OverviewItem>\n                        </OverviewCenter>\n                    </Link>\n                </>\n            )}\n        </Container>\n    );\n}\n\nexport default Coin;","/Users/jsoh/nomadcoder/react-masterclass-typescript/src/api.ts",[],"/Users/jsoh/nomadcoder/react-masterclass-typescript/src/routes/Coins.tsx",["62","63","64"],"/Users/jsoh/nomadcoder/react-masterclass-typescript/src/atoms.ts",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":5,"column":10,"nodeType":"71","messageId":"72","endLine":5,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":7,"column":17,"nodeType":"75","messageId":"76","endLine":7,"endColumn":33},{"ruleId":"69","severity":1,"message":"77","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":18},{"ruleId":"69","severity":1,"message":"78","line":4,"column":10,"nodeType":"71","messageId":"72","endLine":4,"endColumn":26},{"ruleId":"69","severity":1,"message":"79","line":108,"column":24,"nodeType":"71","messageId":"72","endLine":108,"endColumn":35},{"ruleId":"69","severity":1,"message":"80","line":108,"column":43,"nodeType":"71","messageId":"72","endLine":108,"endColumn":51},{"ruleId":"69","severity":1,"message":"81","line":1,"column":10,"nodeType":"71","messageId":"72","endLine":1,"endColumn":19},{"ruleId":"69","severity":1,"message":"70","line":1,"column":21,"nodeType":"71","messageId":"72","endLine":1,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":150,"column":15,"nodeType":"75","messageId":"76","endLine":150,"endColumn":29},{"ruleId":"69","severity":1,"message":"81","line":1,"column":10,"nodeType":"71","messageId":"72","endLine":1,"endColumn":19},{"ruleId":"69","severity":1,"message":"70","line":1,"column":21,"nodeType":"71","messageId":"72","endLine":1,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":71,"column":16,"nodeType":"75","messageId":"76","endLine":71,"endColumn":31},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'ApexCharts' is defined but never used.","'fetchCoinHistory' is defined but never used.","'infoLoading' is assigned a value but never used.","'infoData' is assigned a value but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]