{"ast":null,"code":"var _jsxFileName = \"/Users/jsoh/nomadcoder/react-masterclass-typescript/src/routes/Price.tsx\",\n    _s = $RefreshSig$();\n\nimport ApexCharts from \"react-apexcharts\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nfunction Price(_ref) {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId), {\n    refetchInterval: 10000\n  });\n  const result = data === null || data === void 0 ? void 0 : data.map(price => {\n    const x = price.time_close;\n    const y = [price.open, price.high, price.low, price.close];\n    return {\n      x,\n      y\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading Chart...\" : /*#__PURE__*/_jsxDEV(ApexCharts, {\n      type: \"candlestick\",\n      series: [{\n        name: \"candle\",\n        data: result\n      }],\n      options: {\n        theme: {\n          mode: \"dark\"\n        },\n        chart: {\n          height: 300,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 4\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          axisBorder: {\n            show: false\n          },\n          labels: {\n            show: false\n          },\n          type: \"datetime\",\n          categories: data === null || data === void 0 ? void 0 : data.map(price => price.time_close)\n        },\n        fill: {\n          type: \"gradient\",\n          gradient: {\n            gradientToColors: [\"#0be881\"],\n            stops: [0, 100]\n          }\n        },\n        colors: [\"#0fbcf9\"],\n        tooltip: {\n          y: {\n            formatter: value => `$${value.toFixed(2)}`\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Price, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Price;\nexport default Price;\n\nvar _c;\n\n$RefreshReg$(_c, \"Price\");","map":{"version":3,"sources":["/Users/jsoh/nomadcoder/react-masterclass-typescript/src/routes/Price.tsx"],"names":["ApexCharts","useQuery","fetchCoinHistory","Price","coinId","isLoading","data","refetchInterval","result","map","price","x","time_close","y","open","high","low","close","name","theme","mode","chart","height","width","toolbar","show","background","stroke","curve","yaxis","xaxis","axisBorder","labels","type","categories","fill","gradient","gradientToColors","stops","colors","tooltip","formatter","value","toFixed"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,QAAjC;;AAeC;;AAED,SAASC,KAAT,OAAsC;AAAA;;AAAA,MAAvB;AAAEC,IAAAA;AAAF,GAAuB;AAClC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBL,QAAQ,CAAgB,CAAC,OAAD,EAAUG,MAAV,CAAhB,EAAmC,MAAMF,gBAAgB,CAACE,MAAD,CAAzD,EAAmE;AAACG,IAAAA,eAAe,EAAE;AAAlB,GAAnE,CAApC;AACA,QAAMC,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,GAAN,CAAUC,KAAK,IAAI;AAC9B,UAAMC,CAAC,GAAGD,KAAK,CAACE,UAAhB;AACA,UAAMC,CAAC,GAAG,CAAEH,KAAK,CAACI,IAAR,EAAaJ,KAAK,CAACK,IAAnB,EAAwBL,KAAK,CAACM,GAA9B,EAAmCN,KAAK,CAACO,KAAzC,CAAV;AACA,WAAO;AAACN,MAAAA,CAAD;AAAGE,MAAAA;AAAH,KAAP;AACH,GAJc,CAAf;AAMA,sBACI;AAAA,cACKR,SAAS,GAAI,kBAAJ,gBACN,QAAC,UAAD;AACI,MAAA,IAAI,EAAC,aADT;AAEI,MAAA,MAAM,EAAE,CACJ;AACIa,QAAAA,IAAI,EAAE,QADV;AAEIZ,QAAAA,IAAI,EAAEE;AAFV,OADI,CAFZ;AAQI,MAAA,OAAO,EAAE;AACLW,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE;AADH,SADF;AAILC,QAAAA,KAAK,EAAE;AACHC,UAAAA,MAAM,EAAE,GADL;AAEHC,UAAAA,KAAK,EAAE,GAFJ;AAGHC,UAAAA,OAAO,EAAE;AACLC,YAAAA,IAAI,EAAE;AADD,WAHN;AAMHC,UAAAA,UAAU,EAAE;AANT,SAJF;AAYLC,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,QADH;AAEJL,UAAAA,KAAK,EAAE;AAFH,SAZH;AAgBLM,QAAAA,KAAK,EAAE;AACHJ,UAAAA,IAAI,EAAE;AADH,SAhBF;AAmBLK,QAAAA,KAAK,EAAE;AACHC,UAAAA,UAAU,EAAE;AAAEN,YAAAA,IAAI,EAAE;AAAR,WADT;AAGHO,UAAAA,MAAM,EAAE;AAAEP,YAAAA,IAAI,EAAE;AAAR,WAHL;AAIHQ,UAAAA,IAAI,EAAE,UAJH;AAKHC,UAAAA,UAAU,EAAE5B,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEG,GAAN,CAAUC,KAAK,IAAIA,KAAK,CAACE,UAAzB;AALT,SAnBF;AA0BLuB,QAAAA,IAAI,EAAE;AACFF,UAAAA,IAAI,EAAE,UADJ;AAEFG,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,gBAAgB,EAAE,CAAC,SAAD,CAApB;AAAiCC,YAAAA,KAAK,EAAE,CAAC,CAAD,EAAI,GAAJ;AAAxC;AAFR,SA1BD;AA8BLC,QAAAA,MAAM,EAAE,CAAC,SAAD,CA9BH;AA+BLC,QAAAA,OAAO,EAAE;AACL3B,UAAAA,CAAC,EAAE;AACC4B,YAAAA,SAAS,EAAGC,KAAD,IAAY,IAAGA,KAAK,CAACC,OAAN,CAAc,CAAd,CAAiB;AAD5C;AADE;AA/BJ;AARb;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAoDH;;GA5DQxC,K;UACuBF,Q;;;KADvBE,K;AA8DT,eAAeA,KAAf","sourcesContent":["import ApexCharts from \"react-apexcharts\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\n\ninterface IHistorical {\n    time_open: string;\n    time_close: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    market_cap: number;\n}\n\ninterface ChartProps {\n    coinId: string,\n};\n\nfunction Price({ coinId }: ChartProps){\n    const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () => fetchCoinHistory(coinId), {refetchInterval: 10000,});\n    const result = data?.map(price => {\n        const x = price.time_close;\n        const y = [ price.open,price.high,price.low, price.close];\n        return {x,y};\n    });\n    \n    return (\n        <div>\n            {isLoading ? (\"Loading Chart...\") : (\n                <ApexCharts\n                    type=\"candlestick\"\n                    series={[\n                        {\n                            name: \"candle\",\n                            data: result,\n                        },\n                    ]}\n                    options={{\n                        theme: {\n                            mode: \"dark\",\n                        },\n                        chart: {\n                            height: 300,\n                            width: 500,\n                            toolbar: {\n                                show: false,\n                            },\n                            background: \"transparent\",\n                        },\n                        stroke: {\n                            curve: \"smooth\",\n                            width: 4,\n                        },\n                        yaxis: {\n                            show: false,\n                        },\n                        xaxis: {\n                            axisBorder: { show: false },\n                            \n                            labels: { show: false },\n                            type: \"datetime\",\n                            categories: data?.map(price => price.time_close),\n                        },\n                        fill: {\n                            type: \"gradient\",\n                            gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n                        },\n                        colors: [\"#0fbcf9\"],\n                        tooltip: {\n                            y: {\n                                formatter: (value) => `$${value.toFixed(2)}`,\n                            }\n                        }\n                    }}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default Price;"]},"metadata":{},"sourceType":"module"}