{"ast":null,"code":"var _jsxFileName = \"/Users/jsoh/nomadcoder/react-masterclass-typescript/src/routes/Chart.tsx\",\n    _s = $RefreshSig$();\n\nimport ApexCharts from \"react-apexcharts\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nfunction Chart(_ref) {\n  _s();\n\n  let {\n    coinId\n  } = _ref;\n  const {\n    isLoading,\n    data\n  } = useQuery([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? \"Loading Chart...\" : /*#__PURE__*/_jsxDEV(ApexCharts, {\n      type: \"line\",\n      series: [{\n        name: \"Price\",\n        data: data === null || data === void 0 ? void 0 : data.map(price => price.close)\n      }],\n      options: {\n        theme: {\n          mode: \"dark\"\n        },\n        chart: {\n          height: 300,\n          width: 500,\n          toolbar: {\n            show: false\n          },\n          background: \"transparent\"\n        },\n        grid: {\n          show: false\n        },\n        stroke: {\n          curve: \"smooth\",\n          width: 4\n        },\n        yaxis: {\n          show: false\n        },\n        xaxis: {\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          labels: {\n            show: false\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"3/UYpjJNObciauUid8uIQ//UcYY=\", false, function () {\n  return [useQuery];\n});\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/jsoh/nomadcoder/react-masterclass-typescript/src/routes/Chart.tsx"],"names":["ApexCharts","useQuery","fetchCoinHistory","Chart","coinId","isLoading","data","name","map","price","close","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,gBAAT,QAAiC,QAAjC;;AAeC;;AAED,SAASC,KAAT,OAAuC;AAAA;;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;AACnC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAsBL,QAAQ,CAAgB,CAAC,OAAD,EAAUG,MAAV,CAAhB,EAAmC,MAAMF,gBAAgB,CAACE,MAAD,CAAzD,CAApC;AACA,sBACI;AAAA,cACKC,SAAS,GAAI,kBAAJ,gBACN,QAAC,UAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,MAAM,EAAE,CACJ;AACIE,QAAAA,IAAI,EAAE,OADV;AAEID,QAAAA,IAAI,EAAEA,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE,GAAN,CAAUC,KAAK,IAAIA,KAAK,CAACC,KAAzB;AAFV,OADI,CAFZ;AAQI,MAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAC;AACFC,UAAAA,IAAI,EAAE;AADJ,SADD;AAILC,QAAAA,KAAK,EAAC;AACFC,UAAAA,MAAM,EAAC,GADL;AAEFC,UAAAA,KAAK,EAAC,GAFJ;AAGFC,UAAAA,OAAO,EAAC;AACJC,YAAAA,IAAI,EAAC;AADD,WAHN;AAMFC,UAAAA,UAAU,EAAE;AANV,SAJD;AAYLC,QAAAA,IAAI,EAAC;AAACF,UAAAA,IAAI,EAAC;AAAN,SAZA;AAaLG,QAAAA,MAAM,EAAE;AACJC,UAAAA,KAAK,EAAE,QADH;AAEJN,UAAAA,KAAK,EAAE;AAFH,SAbH;AAiBHO,QAAAA,KAAK,EAAE;AACLL,UAAAA,IAAI,EAAE;AADD,SAjBJ;AAoBHM,QAAAA,KAAK,EAAE;AACLC,UAAAA,UAAU,EAAE;AAAEP,YAAAA,IAAI,EAAE;AAAR,WADP;AAELQ,UAAAA,SAAS,EAAE;AAAER,YAAAA,IAAI,EAAE;AAAR,WAFN;AAGLS,UAAAA,MAAM,EAAE;AAAET,YAAAA,IAAI,EAAE;AAAR;AAHH;AApBJ;AARb;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH;;GA3CQd,K;UACuBF,Q;;;KADvBE,K;AA6CT,eAAeA,KAAf","sourcesContent":["import ApexCharts from \"react-apexcharts\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\n\ninterface IHistorical {\n    time_open: string;\n    time_close: string;\n    open: number;\n    high: number;\n    low: number;\n    close: number;\n    volume: number;\n    market_cap: number;\n}\n\ninterface ChartProps {\n    coinId: string,\n};\n\nfunction Chart({ coinId }: ChartProps) {\n    const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () => fetchCoinHistory(coinId));\n    return (\n        <div>\n            {isLoading ? (\"Loading Chart...\") : (\n                <ApexCharts\n                    type=\"line\"\n                    series={[\n                        {\n                            name: \"Price\",\n                            data: data?.map(price => price.close),\n                        },\n                    ]}\n                    options={{\n                        theme:{\n                            mode: \"dark\",\n                        },\n                        chart:{\n                            height:300,\n                            width:500,\n                            toolbar:{\n                                show:false,\n                            },\n                            background: \"transparent\",\n                        },\n                        grid:{show:false},\n                        stroke: {\n                            curve: \"smooth\",\n                            width: 4,\n                          },\n                          yaxis: {\n                            show: false,\n                          },\n                          xaxis: {\n                            axisBorder: { show: false },\n                            axisTicks: { show: false },\n                            labels: { show: false },\n                          },\n                    }}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}